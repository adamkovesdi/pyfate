#!/usr/bin/env python3
import core
import time
import persistentstorage

def print_logentry(logentry):
    s = time.ctime(logentry["timestamp"]) + "\n"
    s = s + logentry["text"] + "\n"
    rollobjects = core.produce_rollobjects(logentry["text"],
    logentry["results"])
    for r in rollobjects:
        s = s + '[{0}] {1} + {2} = {3}\n'.format(r["fate"], r["roll"], r["mod"], r["result"])
    if len(rollobjects) == 2:
        s = s + 'Rolls difference: {0}\n'.format(core.diff_rollobjects(rollobjects))
    print(s)

def print_logbook(logbook):
    for l in logbook:
        print_logentry(l)

def printladder():
    print("Legendás     +8")
    print("Epikus       +7")
    print("Fantasztikus +6")
    print("Szuper       +5")
    print("Nagyszerű    +4")
    print("Jó           +3")
    print("Fair         +2")
    print("Átlagos      +1")
    print("Középszerű   +0")
    print("Gyenge       -1")
    print("Szörnyű      -2")

logbook = []

while True:
    print('> ', end='')
    try:
        line = input().strip()
    except EOFError:
        quit();
    if line == 'help' or line == '?' or line == 'h':
        print(' * Commands: quit, history, save, load, repeat, ladder, ![mod]: for dice rolls')
        continue
    if line == '':
        continue
    if line == 'l' or line == 'ladder':
        printladder()
        continue
    if line == 's' or line == 'save':
        persistentstorage.save_logbook(logbook)
        continue
    if line == 'load' or line == 'restore':
        logbook = persistentstorage.load_logbook()
        continue
    if line == 'hist' or line == 'history':
        print_logbook(logbook)
        continue
    if line == 'q' or line == 'quit' or line == 'exit':
        break
    if line == 'r' or line == 'repeat':
        line = lastline
    # Normal input processing:
    logentry = core.submit(line)
    print_logentry(logentry)
    # append history
    logbook.append(logentry)
    # for repeat:
    lastline = line

